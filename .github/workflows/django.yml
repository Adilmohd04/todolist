name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Adjust the branch name if necessary
  pull_request:
    branches:
      - main  # Runs on pull requests targeting the 'main' branch

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Adjust Python version if required

      # Step 3: Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
           pip install django djangorestframework
          pip install pytest flake8 black coverage

      # Step 4: Run linting with Flake8
      - name: Run Flake8
        run: flake8 todolist_project  # Adjust path if needed

      # Step 5: Check code formatting with Black
      - name: Run Black
        run: black --check todolist_project  # Adjust path if needed

      # Step 6: Run unit tests
      - name: Run unit tests
        run: python manage.py test todo.tests

      # Step 7: Run integration tests
      - name: Run integration tests
        run: python manage.py test todo.tests_integration

      # Step 8: Generate test coverage report
      - name: Generate Coverage Report
        run: coverage run --source='.' manage.py test && coverage report

      # Step 9: Upload coverage report
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: .coverage

  e2e-tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Use the appropriate Node.js version

      # Step 3: Install Cypress dependencies
      - name: Install Cypress dependencies
        run: |
          cd todo/cypress
          npm ci  # Install dependencies cleanly
          npx cypress install

      # Step 4: Run Cypress E2E tests
      - name: Run Cypress tests
        run: |
          cd todo/cypress
          npx cypress run

      # Step 5: Upload Cypress test results
      - name: Upload Cypress Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cypress-artifacts
          path: |
            todo/cypress/screenshots
            todo/cypress/videos
