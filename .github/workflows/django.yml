name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8 black

      - name: Run Flake8
        run: flake8 .

      - name: Run Black (Check Mode)
        run: black --check .

      - name: Run unit tests
        run: python manage.py test todo.tests

      - name: Run integration tests
        run: python manage.py test todo.tests_integration

      # Step 8: Upload test coverage report (optional)
      - name: Upload coverage report
        uses: actions/upload-artifact@v3  
        with:
          name: coverage-report
          path: .coverage  

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Apply migrations
        run: python manage.py migrate

      - name: Start Django server
        run: |
          nohup python manage.py runserver 0.0.0.0:8000 &
        continue-on-error: false

      # Step 6: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 7: Install dependencies
      - name: Install dependencies
        run: npm install
        working-directory: ./todo/cypress

      # Step 8: Set permissions for Cypress binary
      - name: Set permissions for Cypress
        run: chmod +x ./node_modules/.bin/cypress
        working-directory: ./todo/cypress

      # Step 9: Install Cypress binary
      - name: Install Cypress binary
        run: npx cypress install
        working-directory: ./todo/cypress

      # Step 10: Run Cypress tests
      - name: Run Cypress tests
        run: npx cypress run --config baseUrl=http://127.0.0.1:8000
        working-directory: ./todo/cypress

      # Step 11: Upload Cypress test results
      - name: Upload Cypress test results
        uses: actions/upload-artifact@v3
        with:
          name: cypress-test-results
          path: ./todo/cypress/cypress/results/
